/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.awt.event.InputEvent;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;



/**
 *
 * @author jun Ding
 */
public class showUI extends javax.swing.JFrame {
    private ObjectOutputStream OOS = null;
    private Socket socket = null;
    private DataInputStream dis = null;
    private Server serverUI = null;
    /**
     * Creates new form showUI
     */
    public showUI(Socket ss,ObjectOutputStream oos,Server sui) throws IOException {
        initComponents();
        this.socket = ss;
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); // 设置点击关闭按钮时只关闭当前窗口
        this.OOS = oos;
        this.serverUI = sui;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imgLab = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        imgLab.setFocusable(false);
        imgLab.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                imgLabMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                imgLabMouseMoved(evt);
            }
        });
        imgLab.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                imgLabFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                imgLabFocusLost(evt);
            }
        });
        imgLab.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                imgLabMouseWheelMoved(evt);
            }
        });
        imgLab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imgLabMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                imgLabMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                imgLabMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                imgLabMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                imgLabMouseReleased(evt);
            }
        });
        imgLab.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                imgLabKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                imgLabKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                imgLabKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(imgLab)
                .addGap(0, 830, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(imgLab)
                .addGap(0, 666, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void imgLabKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_imgLabKeyPressed
       // TODO add your handling code here:    
    }//GEN-LAST:event_imgLabKeyPressed

    private void imgLabKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_imgLabKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_imgLabKeyReleased

    private void imgLabKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_imgLabKeyTyped
        // TODO add your handling code here:
        
    }//GEN-LAST:event_imgLabKeyTyped

    private void imgLabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imgLabMouseClicked
        // TODO add your handling code here:
        sendEvent(evt);
    }//GEN-LAST:event_imgLabMouseClicked

    private void imgLabMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imgLabMouseEntered
        // TODO add your handling code here:
       
    }//GEN-LAST:event_imgLabMouseEntered

    private void imgLabMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imgLabMouseExited
        // TODO add your handling code here:
        
    }//GEN-LAST:event_imgLabMouseExited

    private void imgLabMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imgLabMousePressed
        // TODO add your handling code here:
        sendEvent(evt);
    }//GEN-LAST:event_imgLabMousePressed

    private void imgLabMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imgLabMouseReleased
        // TODO add your handling code here:
        sendEvent(evt);
    }//GEN-LAST:event_imgLabMouseReleased

    private void imgLabMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_imgLabMouseWheelMoved
        // TODO add your handling code here:
        requestFocus();
        sendEvent(evt);
    }//GEN-LAST:event_imgLabMouseWheelMoved

    private void imgLabMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imgLabMouseMoved
        // TODO add your handling code here:
        sendEvent(evt);
    }//GEN-LAST:event_imgLabMouseMoved

    private void imgLabMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imgLabMouseDragged
        // TODO add your handling code here:
        sendEvent(evt);
    }//GEN-LAST:event_imgLabMouseDragged

    private void imgLabFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_imgLabFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_imgLabFocusGained

    private void imgLabFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_imgLabFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_imgLabFocusLost

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
        requestFocus();
        KeyInfo info = new KeyInfo(evt.getID(),evt.getKeyCode());
        System.out.println("按下"+ (char)evt.getKeyCode());
        sendEvent(info);
    }//GEN-LAST:event_formKeyPressed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        // TODO add your handling code here:
        requestFocus();
        KeyInfo info = new KeyInfo(evt.getID(),evt.getKeyCode());
        System.out.println("松开" + (char)evt.getKeyCode());
        sendEvent(info);
    }//GEN-LAST:event_formKeyReleased

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if(OOS != null) {
            try {
                OOS.close();
            } catch (IOException ex) {
//                Logger.getLogger(showUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if(socket != null) {
            try {
                socket.close();
            } catch (IOException ex) {
                Logger.getLogger(showUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
//        serverUI.btnConnect.setEnabled(true);
    }//GEN-LAST:event_formWindowClosing

    /** 显示和刷新图片的函数
     * @param args the command line arguments
     */
    public void repaintImage(byte[] imageBytes) {
        imgLab.setIcon(new ImageIcon(imageBytes));
        this.repaint();
    }
    
    // 发送鼠标信息
    public void sendEvent(InputEvent e) {
        try {
            OOS.writeObject(e);
            System.out.println("发送鼠标信息");
        } catch (IOException ex) {
//            ex.printStackTrace();
        }
    }
    
    // 发送键盘信息
    public void sendEvent(KeyInfo e) {
        try {
            OOS.writeObject(e);
            System.out.println("发送键盘信息");
        } catch (IOException ex) {
//            ex.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel imgLab;
    // End of variables declaration//GEN-END:variables
}
